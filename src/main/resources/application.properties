spring.application.name=tsr

# DataBase Configuration
spring.datasource.url=jdbc:mysql://localhost/tsr
# En workbench: 'create database tsr' y ejecutar para crear el schema. Luego al correr la app, se crean las tablas
spring.datasource.username=root
spring.datasource.password=admin

spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create-drop 
#Para pruebas en la creaci\u00f3n de los modelos/tablas, luego pasar a 'update'
spring.jpa.hibernate.ddl-auto=update

#Configuraci\u00f3n de Logs
# Configurar el nivel de logs (ERROR, WARN, INFO, DEBUG, TRACE)
logging.level.root=INFO
#Los niveles de log son (de menor a mayor prioridad):
#TRACE: Informaci\u00f3n extremadamente detallada. Se usa para rastrear la ejecuci\u00f3n paso a paso.
#DEBUG: Informaci\u00f3n detallada para depuraci\u00f3n.
#INFO: Informaci\u00f3n general, \u00fatil para monitoreo normal.
#WARN: Advertencias sobre situaciones potencialmente problem\u00e1ticas.
#ERROR: Errores serios, que requieren atenci\u00f3n inmediata.

# Configurar el formato del log sin el d\u00eda, mostrando solo la hora
logging.pattern.console=%d{HH:mm:ss} - %msg%n
#%msg:
    #Representa el mensaje del log
    #Es donde se muestra el texto que especifiqu\u00e9, como "App iniciada correctamente"
#%n:
    #A\u00f1ade un salto de l\u00ednea al final de cada mensaje de log.
    #Esto asegura que cada entrada de log aparezca en una l\u00ednea separada en la consola.